---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import AspectRatio from "@/components/AspectRatio.astro";
import FormattedDate from "@/components/FormattedDate.astro";

const events = (await getCollection("events"))
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((event) => event.data.status === "published");

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png}"
);

const loadImage = (path: string) => {
  if (!images[path])
    throw new Error(
      `"${path}" does not exist in glob: "src/assets/*.{jpeg,jpg,png} ${Object.keys(
        images
      )}"`
    );
  return images[path]();
};
---

<Layout title="Events | PPI Aachen">
  <h1 class="my-20 text-center text-7xl font-bold">Events</h1>
  <section class="flex flex-row flex-wrap justify-center">
    {
      events.map((event) => (
        <div class="w-full md:w-1/2">
          <div class="event-square">
            <a href={`/events/${event.slug}/`}>
              <AspectRatio ratio={1 / 1}>
                <Image
                  loading="lazy"
                  width={600}
                  src={loadImage(event.data.heroImage)}
                  alt=""
                />
              </AspectRatio>
              <div class="absolute right-3 top-3 bg-black/50 px-3 py-2 text-xs font-bold text-white">
                <FormattedDate date={event.data.pubDate} />
              </div>
              <div class="event-overlay">
                <h2 class="mb-3 text-2xl font-light uppercase">
                  {event.data.title}
                </h2>
                <div class="event-description">
                  <p class="text-base font-light">{event.data.description}</p>
                </div>
              </div>
            </a>
          </div>
        </div>
      ))
    }
  </section>
</Layout>

<style>
  .event-square {
    @apply relative m-4;
  }
  .event-overlay {
    @apply pointer-events-none absolute inset-x-0 bottom-0 z-10 p-10 pt-52;
    background-image: linear-gradient(
      rgba(0, 0, 0, 0),
      rgba(243, 238, 227, 1) 300px
    );
  }
  .event-square:hover .event-description {
    @apply max-h-[400px] opacity-100;
  }
  .event-description {
    @apply max-h-0 overflow-hidden opacity-0;
    transition:
      1s ease-in-out opacity,
      1s ease-in-out max-height;
  }
</style>
