---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import BaseHead from "@/components/BaseHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import FormattedDate from "@/components/FormattedDate.astro";

type Props = CollectionEntry<"event">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png}"
);

const loadImage = (path: string) => {
  if (!images[path])
    throw new Error(
      `"${path}" does not exist in glob: "src/assets/*.{jpeg,jpg,png} ${Object.keys(
        images
      )}"`
    );
  return images[path]();
};
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
  </head>

  <body>
    <Header />
    <main class="mx-auto min-h-[80vh] max-w-screen-xl">
      <article class="prose mx-auto lg:prose-xl">
        <div class="mx-auto w-1/3">
          {
            heroImage && (
              <Image
                class="rounded-lg"
                loading="eager"
                src={loadImage(heroImage)}
                alt=""
              />
            )
          }
        </div>
        <div class="mx-auto mt-10 w-3/4">
          <div class="mb-10 text-center uppercase">
            <h1>{title}</h1>
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
